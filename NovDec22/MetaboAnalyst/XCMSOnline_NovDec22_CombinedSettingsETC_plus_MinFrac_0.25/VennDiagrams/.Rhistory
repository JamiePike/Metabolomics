# loop through all of the pairwise combinations ggvenn_data list.
for (i in 2:length(ggvenn_data)) {
cols_combinations <- combn(names(ggvenn_data), i, simplify = FALSE)
for (cols in cols_combinations) {
sheet_name <- paste(cols, collapse = "_and_")
shared_items[[sheet_name]] <- Reduce(intersect, ggvenn_data[cols])
}
}
# calculate groups unique to each column
for (col_name in names(ggvenn_data)) {
unique_to_col <- ggvenn_data[[col_name]]
for (shared_col in names(ggvenn_data)) {
if (shared_col != col_name) {
unique_to_col <- setdiff(unique_to_col, ggvenn_data[[shared_col]])
}
}
sheet_name <- paste("Unique_to_", col_name)
# add the group even if it's empty
shared_items[[sheet_name]] <- unique_to_col
}
# write shared items to a CSV with separate sheets
write.xlsx(shared_items, "Shared_Items_Sheets_178SecondTimePoint-Pairwise.xlsx")
# write shared items to a CSV with separate sheets
write.xlsx(shared_items, "Shared_Items_Sheets_Time.xlsx")
suppressPackageStartupMessages(library(ggarrange))
ggarrange
ggarrange()
install.packages("ggarrange")
suppressPackageStartupMessages(library(ggpubr))
ggarrange()
external_mean <- do.call(data.frame, aggregate(
x = rawdat$External_ss,
by = list(time = rawdat$Timepoint_no., treatment = rawdat$Treatment_group),
FUN = stats))
# set working dir and load the data
setwd("/Volumes/Jamie_EXT/Projects/Metabolomics/NovDec22/SymptomsScores")
rawdat <- read.csv("/Volumes/Jamie_EXT/Projects/Metabolomics/NovDec22/SymptomsScores/rawdata.csv")
# ------------- Functions ------------- #
# create a function so aggregate can calculate more than one statistic
stats <- function(x) c(Mean = mean(x), SD = sd(x))
# --------- External Symptoms --------- #
# calculate mean for external symptom score
external_mean <- do.call(data.frame, aggregate(
x = rawdat$External_ss,
by = list(time = rawdat$Timepoint_no., treatment = rawdat$Treatment_group),
FUN = stats))
# build plot of external symptom score over time
external_plot <- ggplot(data = external_mean, aes(x = time, y = x.Mean, col = treatment)) +
geom_errorbar(aes(ymin=x.Mean-x.SD, ymax=x.Mean+x.SD), width=.035, alpha = 0.5, linetype = 5) +
geom_line() + geom_point() +
scale_color_manual(values=c("#999999", "#56B4E9", "#E69F00", "#e94646e6"), labels = c("Mock", "Drought", "Fusarium", "Xanthomonas")) +
labs(x="Sampling Time Point", y = "Mean Symptom Score", color="Treatment Group")+
theme_bw() +
scale_x_continuous(breaks=c(1,2,3)) +
theme(legend.position="bottom")
# save the plot
internal_mean <- do.call(data.frame, aggregate(
x = rawdat$Internal_ss,
by = list(time = rawdat$Timepoint_no., treatment = rawdat$Treatment_group),
FUN = stats))
# build plot of internal symptom score over time
internal_plot <- ggplot(data = internal_mean, aes(x = time, y = x.Mean, col = treatment)) +
geom_errorbar(aes(ymin=x.Mean-x.SD, ymax=x.Mean+x.SD), width=.035, alpha = 0.5, linetype = 5) +
geom_line() + geom_point() +
scale_color_manual(values=c("#999999", "#56B4E9", "#E69F00", "#e94646e6"), labels = c("Mock", "Drought", "Fusarium", "Xanthomonas")) +
labs(x="Sampling Time Point", y = "Mean Symptom Score", color="Treatment Group")+
theme_bw() +
scale_x_continuous(breaks=c(1,2,3)) +
theme(legend.position="bottom")
internal_plot
external_plot
ggarrange(external_plot, internal_plot)
ggsave("Combined_Sympotoms_plot.png")
ggarrange(external_plot, internal_plot, ncol = 2, nrow = 1, labels = c("a","b") )
install.packages("patchwork")
suppressPackageStartupMessages(library(patchwork))
combined <- external_plot + internal_plot & theme(legend.position = "bottom")
combined
combined
combined + plot_layout(guides = "collect")
combined + plot_layout(guides = "collect") + plot_annotation(tag_levels = c("a", "b"))
ggsave("Combined_Sympotoms_plot.png")
ggvenn_plot
# Save the Venn diagram
ggsave("SharedFeaturesVenn_Time.png", plot = ggvenn_plot, width = 3, height = 2, units = "in")
# --------- Build the plot --------- #
# Create the Venn diagram using ggplot2 and ggvenn
ggvenn_plot <- ggvenn(ggvenn_data, fill_color = c("#0073C2FF", "#EFC000FF"), #"#D2042D"
stroke_size = 0.5, show_percentage = F, show_elements = F) +
theme_void() +
theme(text = element_text(size=20))
ggvenn_plot
# Save the Venn diagram
ggsave("SharedFeaturesVenn_Time.png", plot = ggvenn_plot, width = 3, height = 2, units = "in")
ggvenn_plot <- ggvenn(ggvenn_data, fill_color = c("#0073C2FF", "#EFC000FF"), #"#D2042D"
stroke_size = 0.5, show_percentage = F, show_elements = F) +
theme_void() +
theme(text = element_text(size=20))
# Save the Venn diagram
ggsave("SharedFeaturesVenn_Time.png", plot = ggvenn_plot, width = 3, height = 2, units = "in")
# --------- Build the plot --------- #
# Create the Venn diagram using ggplot2 and ggvenn
ggvenn_plot <- ggvenn(ggvenn_data, fill_color = c("#0073C2FF", "#EFC000FF"), #"#D2042D"
stroke_size = 0.5, show_percentage = F, show_elements = F) +
theme_void() +
theme(text = element_text(size=200))
# Save the Venn diagram
ggsave("SharedFeaturesVenn_Time.png", plot = ggvenn_plot, width = 3, height = 2, units = "in")
# Read the TSV file
setwd("/Volumes/Jamie_EXT/Projects/Metabolomics/NovDec22/MetaboAnalyst/XCMSOnline_NovDec22_CombinedSettingsETC_plus_MinFrac_0.25/VennDiagrams/")
data <- read.table("/Volumes/Jamie_EXT/Projects/Metabolomics/NovDec22/MetaboAnalyst/XCMSOnline_NovDec22_CombinedSettingsETC_plus_MinFrac_0.25/VennDiagrams/AllSigFeatures-Time.csv", header = T, sep = ",")
# --------- Build the plot --------- #
# Create the Venn diagram using ggplot2 and ggvenn
ggvenn_plot <- ggvenn(ggvenn_data, fill_color = c("#0073C2FF", "#EFC000FF"), #"#D2042D"
stroke_size = 0.5, show_percentage = F, show_elements = F) +
theme_void() +
theme(text = element_text(size=200))
# Save the Venn diagram
ggsave("SharedFeaturesVenn_Time.png", plot = ggvenn_plot, width = 3, height = 2, units = "in")
# --------- Build the plot --------- #
# Create the Venn diagram using ggplot2 and ggvenn
ggvenn_plot <- ggvenn(ggvenn_data, fill_color = c("#0073C2FF", "#EFC000FF"), #"#D2042D"
stroke_size = 0.5, show_percentage = F, show_elements = F) +
theme_void() +
theme(text = element_text(size=20))
# Save the Venn diagram
ggsave("SharedFeaturesVenn_Time.png", plot = ggvenn_plot, width = 3, height = 2, units = "in")
ggvenn_plot <- ggvenn(ggvenn_data, fill_color = c("#0073C2FF", "#EFC000FF"), #"#D2042D"
stroke_size = 0.5, show_percentage = F, show_elements = F) +
theme_void() +
theme(text = element_text(size=20))
# Save the Venn diagram
ggsave("SharedFeaturesVenn_Time.png", plot = ggvenn_plot, width = 3, height = 2, units = "in")
# Save the Venn diagram
ggsave("SharedFeaturesVenn_Time.png", plot = ggvenn_plot, width = 6, height = 6, units = "in")
ggvenn_plot <- ggvenn(ggvenn_data, fill_color = c("#0073C2FF", "#EFC000FF"), #"#D2042D"
stroke_size = 0.5, show_percentage = F, show_elements = F) +
theme_void() +
theme(text = element_text(size=20))
# Save the Venn diagram
ggsave("SharedFeaturesVenn_Time.png", plot = ggvenn_plot, width = 4, height = 4, units = "in")
# Create the Venn diagram using ggplot2 and ggvenn
ggvenn_plot <- ggvenn(ggvenn_data, fill_color = c("#0073C2FF", "#EFC000FF"), #"#D2042D"
stroke_size = 0.5, show_percentage = F, show_elements = F) +
theme_void() +
theme(text = element_text(size=20))
# Save the Venn diagram
ggsave("SharedFeaturesVenn_Time.png", plot = ggvenn_plot, width = 4, height = 5, units = "in")
# Create the Venn diagram using ggplot2 and ggvenn
ggvenn_plot <- ggvenn(ggvenn_data, fill_color = c("#0073C2FF", "#EFC000FF"), #"#D2042D"
stroke_size = 0.5, show_percentage = F, show_elements = F) +
theme_void() +
theme(text = element_text(size=20))
# Save the Venn diagram
ggsave("SharedFeaturesVenn_Time.png", plot = ggvenn_plot, width = 5, height = 5, units = "in")
# --------- Build the plot --------- #
# Create the Venn diagram using ggplot2 and ggvenn
ggvenn_plot <- ggvenn(ggvenn_data, fill_color = c("#0073C2FF", "#EFC000FF"), #"#D2042D"
stroke_size = 0.5, show_percentage = F, show_elements = F) +
theme_void() +
theme(text = element_text(size=18))
# Save the Venn diagram
ggsave("SharedFeaturesVenn_Time.png", plot = ggvenn_plot, width = 5, height = 5, units = "in")
# Create the Venn diagram using ggplot2 and ggvenn
ggvenn_plot <- ggvenn(ggvenn_data, fill_color = c("#0073C2FF", "#EFC000FF"), #"#D2042D"
stroke_size = 0.5, show_percentage = F, show_elements = F) +
theme_void() +
theme(text = element_text(size=18))
# Save the Venn diagram
ggsave("SharedFeaturesVenn_Time.png", plot = ggvenn_plot, width = 5, height = 5, units = "in")
#
ggvenn_plot <- ggvenn(ggvenn_data, fill_color = c("#0073C2FF", "#EFC000FF"), #"#D2042D"
stroke_size = 0.5, show_percentage = F, show_elements = F) +
theme_void() +
theme(text = element_text(size=18))
# Save the Venn diagram
ggsave("SharedFeaturesVenn_Time.png", plot = ggvenn_plot)
# --------- Build the plot --------- #
# Create the Venn diagram using ggplot2 and ggvenn
ggvenn_plot <- ggvenn(ggvenn_data, fill_color = c("#0073C2FF", "#EFC000FF"), #"#D2042D"
stroke_size = 0.5, show_percentage = F, show_elements = F) +
theme_void() +
theme(text = element_text(size=50))
# Save the Venn diagram
ggsave("SharedFeaturesVenn_Time.png", plot = ggvenn_plot)
ggvenn_plot
ggvenn_plot <- ggvenn(ggvenn_data, fill_color = c("#0073C2FF", "#EFC000FF"), #"#D2042D"
stroke_size = 0.5, show_percentage = F, show_elements = F) +
theme_void() +
theme(text = element_text(size=18))
# Save the Venn diagram
ggsave("SharedFeaturesVenn_Time.png", plot = ggvenn_plot, width = 5, height = 5, units = "in")
# --------- Build the plot --------- #
# Create the Venn diagram using ggplot2 and ggvenn
ggvenn_plot <- ggvenn(ggvenn_data, fill_color = c("#0073C2FF", "#EFC000FF"), #"#D2042D"
stroke_size = 1, show_percentage = T, show_elements = F) +
theme_void() +
theme(text = element_text(size=18))
ggvenn_plot
ggvenn_plot <- ggvenn(ggvenn_data, fill_color = c("#0073C2FF", "#EFC000FF"), #"#D2042D"
stroke_size = 1, show_percentage = F, show_elements = F) +
theme_void() +
theme(text = element_text(size=18))
# --------- Build the plot --------- #
# Create the Venn diagram using ggplot2 and ggvenn
ggvenn_plot <- ggvenn(ggvenn_data, fill_color = c("#0073C2FF", "#EFC000FF"), #"#D2042D"
stroke_size = 1, show_percentage = F, show_elements = F) +
#theme_void() +
theme(text = element_text(size=18))
ggvenn_plot
# --------- Build the plot --------- #
# Create the Venn diagram using ggplot2 and ggvenn
ggvenn_plot <- ggvenn(ggvenn_data, fill_color = c("#0073C2FF", "#EFC000FF"), #"#D2042D"
stroke_size = 1, show_percentage = F, show_elements = F) +
theme_void() +
theme_classic() +
theme(text = element_text(size=18))
ggvenn_plot
# --------- Build the plot --------- #
# Create the Venn diagram using ggplot2 and ggvenn
ggvenn_plot <- ggvenn(ggvenn_data, fill_color = c("#0073C2FF", "#EFC000FF"), #"#D2042D"
stroke_size = 1, show_percentage = F, show_elements = F) +
theme_void() +
theme_bw() +
theme(text = element_text(size=18))
ggvenn_plot
# --------- Build the plot --------- #
# Create the Venn diagram using ggplot2 and ggvenn
ggvenn_plot <- ggvenn(ggvenn_data, fill_color = c("#0073C2FF", "#EFC000FF"), #"#D2042D"
stroke_size = 1, show_percentage = F, show_elements = F) +
theme_bw() +
theme_void() +
theme(text = element_text(size=18))
ggvenn_plot
# --------- Build the plot --------- #
# Create the Venn diagram using ggplot2 and ggvenn
ggvenn_plot <- ggvenn(ggvenn_data, fill_color = c("#0073C2FF", "#EFC000FF"), #"#D2042D"
stroke_size = 1, show_percentage = F, show_elements = F) +
theme_void() +
theme(text = element_text(size=18))
ggvenn_plot
# Save the Venn diagram
ggsave("SharedFeaturesVenn_Time.png", plot = ggvenn_plot, width = 5, height = 5, units = "in")
# Save the Venn diagram
ggsave("SharedFeaturesVenn_Time.png", plot = ggvenn_plot, width = 5, height = 5.5, units = "in")
# --------- Build the plot --------- #
# Create the Venn diagram using ggplot2 and ggvenn
ggvenn_plot <- ggvenn(ggvenn_data, fill_color = c("#0073C2FF", "#EFC000FF", labels = c("time 1", "Time 2"), #"#D2042D"
# --------- Build the plot --------- #
# Create the Venn diagram using ggplot2 and ggvenn
ggvenn_plot <- ggvenn(ggvenn_data, fill_color = c("#0073C2FF", "#EFC000FF", labels = c("time 1", "Time 2")), #"#D2042D"
stroke_size = 1, show_percentage = F, show_elements = F) +
theme_void() +
theme(text = element_text(size=18))
ggvenn_plot <- ggvenn(ggvenn_data, fill_color = c("#0073C2FF", "#EFC000FF", labels = c("time 1", "Time 2")), #"#D2042D"
# --------- Build the plot --------- #
# Create the Venn diagram using ggplot2 and ggvenn
ggvenn_plot <- ggvenn(ggvenn_data, fill_color = c("#0073C2FF", "#EFC000FF", labels = c("time 1", "Time 2")), #"#D2042D"
stroke_size = 1, show_percentage = F, show_elements = F) +
theme_void() +
theme(text = element_text(size=18))
ggvenn_plot
# --------- Build the plot --------- #
# Create the Venn diagram using ggplot2 and ggvenn
ggvenn_plot <- ggvenn(ggvenn_data, fill_color = c("#0073C2FF", "#EFC000FF", names = c("time 1", "Time 2")), #"#D2042D"
stroke_size = 1, show_percentage = F, show_elements = F) +
theme_void() +
theme(text = element_text(size=18))
ggvenn_plot
# --------- Build the plot --------- #
# Create the Venn diagram using ggplot2 and ggvenn
ggvenn_plot <- ggvenn(ggvenn_data, fill_color = c("#0073C2FF", "#EFC000FF"), #"#D2042D"
stroke_size = 1, show_percentage = F, show_elements = F) +
theme_void() +
coord_fixed() +
theme(text = element_text(size=18))
ggvenn_plot
ggvenn_plot
# Save the Venn diagram
ggsave("SharedFeaturesVenn_Time.png", plot = ggvenn_plot, width = 5, height = 5.5, units = "in")
# --------- Build the plot --------- #
# Create the Venn diagram using ggplot2 and ggvenn
ggvenn_plot <- ggvenn(ggvenn_data, fill_color = c("#0073C2FF", "#EFC000FF"), #"#D2042D"
stroke_size = 1, show_percentage = F, show_elements = F) +
theme_void() +
coord_fixed() +
theme(text = element_text(size=17))
# Save the Venn diagram
ggsave("SharedFeaturesVenn_Time.png", plot = ggvenn_plot, width = 5, height = 5.5, units = "in")
# --------- Build the plot --------- #
# Create the Venn diagram using ggplot2 and ggvenn
ggvenn_plot <- ggvenn(ggvenn_data, fill_color = c("#0073C2FF", "#EFC000FF"), #"#D2042D"
stroke_size = 1, show_percentage = F, show_elements = F) +
theme_void() +
coord_fixed() +
theme(text = element_text(size=5))
# Save the Venn diagram
ggsave("SharedFeaturesVenn_Time.png", plot = ggvenn_plot, width = 5, height = 5.5, units = "in")
# Save the Venn diagram
ggsave("SharedFeaturesVenn_Time.png", plot = ggvenn_plot, width = 6, height = 5, units = "in")
# --------- Build the plot --------- #
# Create the Venn diagram using ggplot2 and ggvenn
ggvenn_plot <- ggvenn(ggvenn_data, fill_color = c("#0073C2FF", "#EFC000FF"), #"#D2042D"
stroke_size = 1, show_percentage = F, show_elements = F) +
theme_void() +
coord_fixed() +
theme(text = element_text(size=20))
# Save the Venn diagram
ggsave("SharedFeaturesVenn_Time.png", plot = ggvenn_plot, width = 6, height = 5, units = "in")
# Save the Venn diagram
ggsave("SharedFeaturesVenn_Time.png", plot = ggvenn_plot, width = 3, height = 2, units = "in")
# Save the Venn diagram
ggsave("SharedFeaturesVenn_Time.png", plot = ggvenn_plot, width = 4, height = 2, units = "in")
# --------- Build the plot --------- #
# Create the Venn diagram using ggplot2 and ggvenn
ggvenn_plot <- ggvenn(ggvenn_data, fill_color = c("#0073C2FF", "#EFC000FF"), #"#D2042D"
stroke_size = 1, show_percentage = F, show_elements = F) +
theme_void() +
coord_fixed()
# Save the Venn diagram
ggsave("SharedFeaturesVenn_Time.png", plot = ggvenn_plot, width = 4, height = 2, units = "in")
# Save the Venn diagram
ggsave("SharedFeaturesVenn_Time.png", plot = ggvenn_plot, width = 5, height = 4, units = "in")
# Save the Venn diagram
ggsave("SharedFeaturesVenn_Time.png", plot = ggvenn_plot, width = 6, height = 4, units = "in")
# --------- Build the plot --------- #
# Create the Venn diagram using ggplot2 and ggvenn
ggvenn_plot <- ggvenn(ggvenn_data, fill_color = c("#0073C2FF", "#EFC000FF"), #"#D2042D"
stroke_size = 1, show_percentage = F, show_elements = F) +
theme_void() +
coord_fixed() +
theme(text = element_text(size=20))
# Save the Venn diagram
ggsave("SharedFeaturesVenn_Time.png", plot = ggvenn_plot, width = 6, height = 4, units = "in")
# Read the TSV file
setwd("/Volumes/Jamie_EXT/Projects/Metabolomics/NovDec22/MetaboAnalyst/XCMSOnline_NovDec22_CombinedSettingsETC_plus_MinFrac_0.25/VennDiagrams/")
data <- read.table("/Volumes/Jamie_EXT/Projects/Metabolomics/NovDec22/MetaboAnalyst/XCMSOnline_NovDec22_CombinedSettingsETC_plus_MinFrac_0.25/VennDiagrams/PairwiseFeaturesList.csv", header = T, sep = ",")
data
data <- read.table("/Volumes/Jamie_EXT/Projects/Metabolomics/NovDec22/MetaboAnalyst/XCMSOnline_NovDec22_CombinedSettingsETC_plus_MinFrac_0.25/VennDiagrams/PairwiseFeaturesList.csv", header = T, sep = "\t")
data
# the data are laid out in columns, with features in a list under each header. ggvenn will identify the shared and unique features.
# Convert data to a format suitable for ggvenn
ggvenn_data <- list(
DroVsCon = data$DroughtVsMock,
FocVsCon = data$FocubTR4VsMock,
XvmVsCon = data$XvmVsMock
)
ggvenn_data
# added to drop empty elements from my data
ggvenn_data <- ggvenn_data |>
lapply(\(x) x[!x == ""])
ggvenn_data
# --------- Build the plot --------- #
# Create the Venn diagram using ggplot2 and ggvenn
ggvenn_plot <- ggvenn(ggvenn_data, fill_color = c("#0073C2FF", "#EFC000FF", "#D2042D"),
stroke_size = 1, show_percentage = F, show_elements = F) +
theme_void() +
coord_fixed() +
theme(text = element_text(size=20))
ggvenn_plot
data <- read.table("/Volumes/Jamie_EXT/Projects/Metabolomics/NovDec22/MetaboAnalyst/XCMSOnline_NovDec22_CombinedSettingsETC_plus_MinFrac_0.25/VennDiagrams/PairwiseFeaturesList.csv", header = T, sep = ",")
data
# the data are laid out in columns, with features in a list under each header. ggvenn will identify the shared and unique features.
# Convert data to a format suitable for ggvenn
ggvenn_data <- list(
DroVsCon = data$DroughtVsMock,
FocVsCon = data$FocubTR4VsMock,
XvmVsCon = data$XvmVsMock
)
ggvenn_data
# added to drop empty elements from my data
ggvenn_data <- ggvenn_data |>
lapply(\(x) x[!x == ""])
# --------- Build the plot --------- #
# Create the Venn diagram using ggplot2 and ggvenn
ggvenn_plot <- ggvenn(ggvenn_data, fill_color = c("#0073C2FF", "#EFC000FF", "#D2042D"),
stroke_size = 1, show_percentage = F, show_elements = F) +
theme_void() +
coord_fixed() +
theme(text = element_text(size=20))
ggvenn_plot
# the data are laid out in columns, with features in a list under each header. ggvenn will identify the shared and unique features.
# Convert data to a format suitable for ggvenn
ggvenn_data <- list(
DroVsMock = data$DroVsCon,
FocubTR4VsMock = data$FocVsCon,
XvmVsMock = data$XvmVsCon
)
ggvenn_data
# added to drop empty elements from my data
ggvenn_data <- ggvenn_data |>
lapply(\(x) x[!x == ""])
ggvenn_data
# --------- Build the plot --------- #
# Create the Venn diagram using ggplot2 and ggvenn
ggvenn_plot <- ggvenn(ggvenn_data, fill_color = c("#0073C2FF", "#EFC000FF", "#D2042D"),
stroke_size = 1, show_percentage = F, show_elements = F) +
theme_void() +
coord_fixed() +
theme(text = element_text(size=20))
ggvenn_plot
# Save the Venn diagram
ggsave("Pairwise_SharedFeaturesVenn_SecondTimePoint.png", plot = ggvenn_plot, width = 6, height = 4, units = "in")
# the data are laid out in columns, with features in a list under each header. ggvenn will identify the shared and unique features.
# Convert data to a format suitable for ggvenn
ggvenn_data <- list(
DroVsMock = data$DroVsCon,
XvmVsMock = data$XvmVsCon,
FocubTR4VsMock = data$FocVsCon,
)
# added to drop empty elements from my data
ggvenn_data <- ggvenn_data |>
lapply(\(x) x[!x == ""])
# --------- Build the plot --------- #
# Create the Venn diagram using ggplot2 and ggvenn
ggvenn_plot <- ggvenn(ggvenn_data, fill_color = c("#0073C2FF", "#EFC000FF", "#D2042D"),
stroke_size = 1, show_percentage = F, show_elements = F) +
theme_void() +
coord_fixed() +
theme(text = element_text(size=20))
ggvenn_plot
# the data are laid out in columns, with features in a list under each header. ggvenn will identify the shared and unique features.
# Convert data to a format suitable for ggvenn
ggvenn_data <- list(
DroVsMock = data$DroVsCon,
XvmVsMock = data$XvmVsCon,
FocubVsMock = data$FocVsCon,
)
# added to drop empty elements from my data
ggvenn_data <- ggvenn_data |>
lapply(\(x) x[!x == ""])
# --------- Build the plot --------- #
# Create the Venn diagram using ggplot2 and ggvenn
ggvenn_plot <- ggvenn(ggvenn_data, fill_color = c("#0073C2FF", "#EFC000FF", "#D2042D"),
stroke_size = 1, show_percentage = F, show_elements = F) +
theme_void() +
coord_fixed() +
theme(text = element_text(size=20))
ggvenn_plot
ggvenn_data <- list(
DroVsMock = data$DroVsCon,
XvmVsMock = data$XvmVsCon,
FocubVsMock = data$FocVsCon,
)
ggvenn_data <- list(
DroVsMock = data$DroVsCon,
XvmVsMock = data$XvmVsCon,
FocubVsMock = data$FocVsCon
)
# added to drop empty elements from my data
ggvenn_data <- ggvenn_data |>
lapply(\(x) x[!x == ""])
# --------- Build the plot --------- #
# Create the Venn diagram using ggplot2 and ggvenn
ggvenn_plot <- ggvenn(ggvenn_data, fill_color = c("#0073C2FF", "#EFC000FF", "#D2042D"),
stroke_size = 1, show_percentage = F, show_elements = F) +
theme_void() +
coord_fixed() +
theme(text = element_text(size=20))
ggvenn_plot
# the data are laid out in columns, with features in a list under each header. ggvenn will identify the shared and unique features.
# Convert data to a format suitable for ggvenn
ggvenn_data <- list(
DroVsMock = data$DroVsCon,
XvmVsMock = data$XvmVsCon,
FocubTR4VsMock = data$FocVsCon
)
# added to drop empty elements from my data
ggvenn_data <- ggvenn_data |>
lapply(\(x) x[!x == ""])
# --------- Build the plot --------- #
# Create the Venn diagram using ggplot2 and ggvenn
ggvenn_plot <- ggvenn(ggvenn_data, fill_color = c("#0073C2FF", "#EFC000FF", "#D2042D"),
stroke_size = 1, show_percentage = F, show_elements = F) +
theme_void() +
coord_fixed() +
theme(text = element_text(size=20))
ggvenn_plot
# Save the Venn diagram
ggsave("Pairwise_SharedFeaturesVenn_SecondTimePoint.png", plot = ggvenn_plot, width = 6, height = 4, units = "in")
ggvenn_data <- list(
DroVsM = data$DroVsCon,
XvmVsM = data$XvmVsCon,
FocVsM = data$FocVsCon
)
# added to drop empty elements from my data
ggvenn_data <- ggvenn_data |>
lapply(\(x) x[!x == ""])
shared_items <- list()
# loop through all of the pairwise combinations ggvenn_data list.
for (i in 2:length(ggvenn_data)) {
cols_combinations <- combn(names(ggvenn_data), i, simplify = FALSE)
for (cols in cols_combinations) {
sheet_name <- paste(cols, collapse = "_and_")
shared_items[[sheet_name]] <- Reduce(intersect, ggvenn_data[cols])
}
}
# calculate groups unique to each column
for (col_name in names(ggvenn_data)) {
unique_to_col <- ggvenn_data[[col_name]]
for (shared_col in names(ggvenn_data)) {
if (shared_col != col_name) {
unique_to_col <- setdiff(unique_to_col, ggvenn_data[[shared_col]])
}
}
sheet_name <- paste("Unique_to_", col_name)
# add the group even if it's empty
shared_items[[sheet_name]] <- unique_to_col
}
# write shared items to a CSV with separate sheets
write.xlsx(shared_items, "Shared_Items_Sheets_Pairwise_SecondTimePoint.xlsx")
shared_items
